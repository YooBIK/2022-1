MD5 - 	Rivest에 의해 RSA-129가 개발됐는데, 뚫려서 만든게 이거임
	512Byte -> 128bit  
	뚫려서 쓰이진 않음
SHA-1 -	160bit를 아웃풋으로 냄, 근데 뚫림
SHA-2 family -	강력함	
SHA-3 family -	강력함

Message Authentication Code
p -> h(p) -> a
p+1 -> h(h+1) -> b
해쉬함수는 인풋이 다르면 결과도 다르게나옴, 이점에 착안해서 
전송자는 원문과 해싱한 결과값을 같이 전송하고 
수신자는 원문을 해싱해서 원문을 통해 만들어진 결과가 맞는지 확인함으로 무결성을 보장

Spam Reduction
M message R value to be determined T current time
M R T 를 해싱해서 특정 숫자 (앞자리 0 이 몇개) 를 만들수 있는 R을 찾아야만 보낼 수 있도록함
송신자가 메세지를 보낼 때, 조금 더 귀찮게해서 보내는 숫자를 줄이는 접근방법
수신자는 특정 숫자(앞자리 0의 숫자) 가 맞는지 확인하고
이후 한번더 Filtering(날짜, 이메일 주소, 해시 데이터를 저장해서 추후에 비교하는 방법 등)



Random bit generation
암호화를 위한 키를 난수를 통해 생성

Stream Cipher
RC4	-	SSL/TLS 와 같은 네트워크 프로토콜에서 많이 사용됨, 굉장히 빠름
평문 -> 랜덤 키 -> 암호화

자체수정lookup table

스트림은 바이트 단위로 암호화 하기 때문에 일부가 누락되도 다른 바이트들을 통해 유추가 가능함
근데 블록단위로 암호화를 하면 블록중 일부가 누락되면 그 블록 자체를 해석할 수 없음

블록 암호(Block ciphers)
각 블록 별로 암호화를 할때의 기준
Confusion 원래 원문을 짐작하기 어렵게 만듬 키와 ciphertext의 관계를 파악하기 어렵게함 
Diffusion 평문과 ciphertext의 균일한 분포를 만듬

블록암호 공격 타입
암호문 단독 공격 - 
알려진 평문 공격 - 공격자가 평문의 일부분과 거기에 대응하는 암호문을 가진 상태에서의 공격
		평문과 cipher text의 연관관계를 분석하고, 다른 암호문에 대해서 적용해서 평문을 유추
선택 평문 공격 - 	공격자가 암호화 도구를 사용할 수 있는 경우,
		평문을 암호화해서 암호의 규칙같은 것을 파악
선택 암호문 공격 - 공격자가 복호화 도구를 사용할 수 있는 경우,
선택 평문/암호문 공격 -
연관 키 공격 - 특정 키 K를 찾고 싶을 때, 관련된 키 K+1,K+2..등 을 활용해 연관관계를 파악하여 K를 찾는 방법

DES
Feistel Algorithm
AES
Rijndael Algorithm 
Bit수가 늘어남 128bits // key length = 128, 192, 256bits 블록 사이즈에 따라
10 ~ 14 rounds 키 길이에 따라 
각 라운드는 4개의 함수를 사용
 


ECB(Electronic Code Book) - 같은 암호화 알고리즘 및 키를 사용해서 각 블록을 암호화
CBC(Cipher Block Chaining) - 






