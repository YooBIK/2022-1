Access Control(접근제어)
Authentication(인증) : 너가 맞냐 ?
인증 수단은 3가지 방법이 있음
알고 있는 ex)password 
갖고 있는 ex)키,보안카드
너만 가능한 ex)지문 

Password : 오늘날 가장 널리 사용됨
장점 :	Password는 사실상 무료이고 굉장히 편리해서 많이 사용됨
단점 : 	사용자들은 password를 랜덤하게 선택하지 않음, 유출이 쉽고 잘 까먹음
	패스워드를 적어놓으면 유출되고 도용될 수 있음
	phishing 및 누군가 보는 것에 의해 유출 될 수 있음
 
Attacks on passwords
특정 계쩡에 대한 공격
어떤 특정 시스템에 대한 공격
등등

Common attack path
공격자 -> 일반사용자 -> 운영자 순서로 공격해서 시스템 자체를 공격
취약한 패스워드 하나만 뚫려도 저렇게 공격이 가능할 수 있음
APT(Advanced Persistent Threat) : 오랜 기간동안 계속 특정 사이트를 개팸 그래서 오랜 기간 동안 쌓인 정보를 통해 뚫음

Password retry
system locks after 3 bad passwords, 얼마나 잠금을 걸어야하나?
5초 - 너무 짧음 공격에 취약, 
5분 - 일반 사용자에게 너무 김, 공격자가 DOS공격 을 할 수도 있음
Until SA restores service -  ??
틀릴 때 마다 lock 하는 시간을 지수적(exponentially)으로 증가시킴

Password File
Password 를 그대로 파일에 저장하는 것은 개쓰래기 같은 방법
Password를 hashing해서 저장 ! 일단 연산이 빠르고,
파일이 유출되어도 Hashing된 파일은 역연산이 불가능하기 때문에 비밀번호가 유출되지 않음!

Dictionary Attack
공격자가 미리 모든 x에 대한 해쉬값을 사전마냥 만들어둠
그리고 그 해싱값을 단순히 비교해서 원래 비밀번호를 찾음

Salt
해싱 할 때, s값과 같이 해싱함(일종의 노이즈를 발생)
근데 s는 password파일 안에 같이 저장되어 있어서 파일이 유출되면
같이 유출됨, 근데 공격자 입장에선 원래 만든 dictionary말고 s를 활용해서 다시 dictionary를 만들어야해서 이전보다 부담
Pepper
해싱 할 때 p값과 같이 해싱함
p는 공개되지 않고 따로 보관됨, 
공격자 입장에선 p를 먼저 찾아서 뚫어야함 

Number of Hash Iterations
해싱을 반복해서 적용, 사용자 입장에서 리소스의 부담이 생기지만,
공격자입장에선 공격이 ㅈㄴ 어려워짐

기기 자체를 털어버리는 악성코드를 통해 털거나
sim카드를 털거나
기본 설정 비밀번호를 통해 비밀번호 생성 규칙? 을 알아내서 털어버림
공격자 자체가 가짜 access point를 만들어서 패스워드를 털어버림

phishing SMS, emails, phone calls 등을 통해 털어버림
에러 로그에는 대부분의 패스워드들이 포함되어있는데 그걸 통해 털어버림
Credential stuffing
이미 유출된 정보를 Attacker들이 여러 사이트에 무작위로 막 대입함
이미 뚫린 비밀번호는 또 다른데서도 뚫릴 수도 있기 떄문에 이런 공격을 함

-생체 인증
이상적인 생체인증
Universal - 대부분의 사람들에게 적용 가능해야함
Distinguishing - 확실하게 구분 가능해야함
Permanent - 영구적으로
Collectable - 필요한 데이터를 모으기 쉬워야함
-safe, user-friendly, etc

-생체인증 모드
Identification(식별)을 위한 용도 : 1대 다수 비교
Authentication(인증)을 위한 용도 : 1대1 비교
Identification이 더 어려움(무작위 데이터와 여러번 비교 해야하기 때문)

-생체인증 절차
Enrollment
생체 정보를 데이터베이스에 저장
필요한 정보를 측정하는 것은 신중하고 정밀해야함
필요하다면 여러번 측정
등록이 제대로 되지 않으면 취약점이 될 수도 있음

Recognition
실제 필요한 상황에 생체 정보를 감지
빠르고 간단해야함
정확해야함(낮은 오류율)

Authentication - 협조적
Identification - 비협조적

생체인증 오류
-False accept(기만율) - A를 B로 인식		// 나를 다른 사람으로 인식, 다른 사람을 나로 인식
-False reject(모욕률) - A를 A로 인식하지 못함	// 나를 나로 인식하지 못함
한쪽이 올라가면 한쪽은 내려가는 양립하는 관계
Equal Error Rate : 기만율과 모욕률이 같아지는 지점
다른 생체인증들을 비교하는 하나의 지표로 사용

지문(Fingerprints)
많은 국가에서 긴 역사를 가진 인증 수단
지문인식 시스템들은 손가락마다 1퍼센트 미만의 오류율(절대적이지는 않음)

지문인식의 취약성
손이 나온 사진에서 지문을 추출하여 공격할 수 있음.
'Master Print' : 여러 지문을 확보해 가짜 지문을 만들고, 적어도 하나만 뚫을 수 있도록 하는 가짜 지문으로 공격
고무를 얇게 손가락 끝에 씌우거나, 실리콘 케이스를 사용하거나, 손가락을 자르거나 등등


-홍체 인식
홍체의 발달 과정은 무질서함(예측 불가능)
유전적 영향이 거의 없음
일란성 쌍둥이의 경우에도 다름

실험실 조건에서 가장 좋은 EER을 가진다.(실제에선 다른수도 있다)

홍체인식에 대한 공격
홍체를 근접거리에서 촬영한 뒤 사용하여 공격 -> 대상이 살아 있는지 확인 (빛을 통해 동공의 수축을 관찰)
렌즈를 사용하여 공격

EER(Equal Error Rate) Comparison 
-실험실 조건 기준!
지문인식 < 5%
홍체인식 : 거의 0%(10^-6)에 가까움
손 인식 : 10^-3 

이외의 대부분의 생체 인식(Typing pattern, 정맥 패턴, 손기하학, 얼굴 열화상카메라, 귀 형태, DNA 등)은 지문보다 성능이 나쁨
생체인식 샘플을 생성할 수 있음.
대부분의 생체 인식은 recording에 취약함, 정보를 기계장치에 의해 분석하고 인식하기 때문에 recording될 여지가 있어서 재생산을 통한 공격에 취약점이 있음
모든 사람에게 정확하게 적용되기 어려움
담합공격에 취약

여러개의 생체인증을 조합해서 사용하더라도, False-accpet or False-reject 비율이 높아질 수 있기 때문에
보안은 강화되더라도 마냥 좋은것만은 아니다




Authorization(인가) : 행동을 위한 허락을 받았냐? 권한이 있냐?